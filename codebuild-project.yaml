AWSTemplateFormatVersion: '2010-09-09'

Description: Crea un proyecto Serverless en CodeBuild

## ***************************** Parameters section ************************************
Parameters:

  Env:
    Description: "Environment"
    Type: String

  CMKARN:
    Description: "ARN of the KMS CMK in Prod account"
    Type: String

## ***************************** Conditions section ************************************
Conditions:
  IsDev: !Equals [ !Ref Env, dev ]
  IsNotDev: !Not [ Condition:  IsDev ]
  IsNotQA: !Not [ !Equals [ !Ref Env, qa ]]

## ***************************** Resources section ************************************

Resources:
#############################################################################
# CodeBuild: BuildProject: QA y Prod
# - Utiliza serverless framework para hacer despliegue de funciones serverless
  serverless:
    Type: AWS::CodeBuild::Project
    Condition: IsNotDev
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:8.11.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: Env
            Value: !Sub ${Env}
      Name: !Sub '${AWS::StackName}-${Env}'
      ServiceRole: !Ref CodeBuildRole
      Source:
        BuildSpec: !Sub |
            version: 0.2
            phases:
              install:
                commands:
                  - npm install
                  - npm install -g serverless
              build:
                commands:
                  - sls deploy --stage $Env -v
        Type: CODEPIPELINE

#############################################################################
# CodeBuild: BuildProject: QA y Prod
# - Utiliza serverless framework para hacer despliegue de funciones serverless
  serverlessTest:
    Type: AWS::CodeBuild::Project
    Condition: IsDev
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:8.11.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: Env
            Value: !Sub ${Env}
      Name: !Sub '${AWS::StackName}-${Env}'
      ServiceRole: !Ref CodeBuildRole
      Source:
        BuildSpec: !Sub |
            version: 0.2
            phases:
              install:
                commands:
                  - npm install
                  - npm install -g serverless
              build:
                commands:
                 - echo "Environment: $Env"
                 - npm run-script lint
                 - npm test
                 - sls deploy --stage $Env -v
              post_build:
                commands:
                 - echo "Cleaning up"
                 - sls remove --stage $Env -v
        Type: CODEPIPELINE

############################################################################
# Role: IAM Role
# -  Role required for CodeBuild
# Nota: El rol no se creara en QA ya que es la misma cuenta que Dev

  CodeBuildRole:
    Type: AWS::IAM::Role
    Condition: IsNotQA
    Properties:
      RoleName: "CodeBuild-Serverless-Role"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"

  CodeBuildPolicy:
    Type: AWS::IAM::Policy
    Condition: IsNotQA
    Properties:
      PolicyName: !Sub "${AWS::StackName}-codebuild-policy"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - cloudformation:Describe*
              - cloudFormation:List*
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:DescribeStacks
              - cloudformation:UpdateStack
              - cloudformation:CreateChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:ExecuteChangeSet
              - cloudformation:SetStackPolicy
              - cloudformation:ValidateTemplate
            Resource:
              - "*"
          -
            Effect: Allow
            Action:
              - logs:*
              - codebuild:*
              - lambda:*
              - cloudformation:ValidateTemplate
            Resource: "*"
          -
            Effect: Allow
            Action:
              - iam:GetRole
              - iam:CreateRole
              - iam:PutRolePolicy
              - iam:DeleteRolePolicy
              - iam:DeleteRole
              - iam:PassRole
            Resource: "*"
          -
            Effect: Allow
            Action:
              - s3:*
            Resource: "*"
          -
            Effect: Allow
            Action:
              - kms:Decrypt
            Resource: !Ref CMKARN
      Roles:
        - !Ref CodeBuildRole
